<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>wolph.unit-converter</string>
	<key>category</key>
	<string>Productivity</string>
	<key>connections</key>
	<dict>
		<key>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</key>
		<array/>
		<key>4CC56A28-09F3-4387-A540-81DCB4DC8C14</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5E060269-88B3-4259-A125-92E4B3E8942C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E1</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E2</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E4</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E5</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E6</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E9</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>87B4FA40-AE32-4F0F-A763-0F7633244946</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B9E7F633-5C7A-405B-894B-BBDFB09DE5C8</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E42A313A-CE15-4A7E-B4B7-AAA7ADCBA21E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Wolph (Rick van Hattem)</string>
	<key>description</key>
	<string>Simple tool to convert measurements with advanced calculation support</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Unit converter</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>0</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 0{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E0</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>1</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 1{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E1</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>2</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 2{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E2</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>3</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 3{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E3</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>4</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 4{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E4</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>5</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 5{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E5</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>6</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 6{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E6</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>autopaste</key>
				<false/>
				<key>clipboardtext</key>
				<string>{query}</string>
				<key>ignoredynamicplaceholders</key>
				<false/>
				<key>transient</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.clipboard</string>
			<key>uid</key>
			<string>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>7</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 7{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E7</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>8</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 8{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E8</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>9</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 9{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>7DD3BDE5-A157-42E5-9376-F681FB50A4E9</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>.</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' 0.{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>B9E7F633-5C7A-405B-894B-BBDFB09DE5C8</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>convert</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' {query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>5E060269-88B3-4259-A125-92E4B3E8942C</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>=</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' {query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>E42A313A-CE15-4A7E-B4B7-AAA7ADCBA21E</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>(</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' ({query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>4CC56A28-09F3-4387-A540-81DCB4DC8C14</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<false/>
				<key>argumenttrimmode</key>
				<integer>1</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>0</integer>
				<key>keyword</key>
				<string>-</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Converting...</string>
				<key>script</key>
				<string>from converter import main
main.scriptfilter(''' -{query} ''')</string>
				<key>scriptargtype</key>
				<integer>0</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Convert "&lt;from&gt; &lt;unit&gt; to &lt;to&gt;"</string>
				<key>type</key>
				<integer>9</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>87B4FA40-AE32-4F0F-A763-0F7633244946</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Alfred Calculor is a smart calculator for Alfred with support for unit
conversions to make it a bit comparable to the Google Calculator and Wolfram
Alpha.

If new units and/or other names for units should be added please let me know by
creating an issue at: https://github.com/WoLpH/alfred-converter/issues

The UNITS_SIDE variable can be set to either `left` or `right` depending on your preference.
With the `MAX_MAGNITUDE` you can specify the maximum order of magnitude difference between two measures. With 3 you will see up to 3 zeros: 1 meter = 1000 millimeters. With 1 you would see up to 1 meter = 10 decimeter.

Example queries

    1m in cm # Just a simple conversion
    2^30 byte # Using powers before conversion
    5' # Converting units with special characters
    20" # Like above
    5 * cos(pi + 2) # Executing mathematical functions
    5 * pi + 2 mm in m # Mathematical constants with unit conversion
    1 * cos(pi/2) - sin(pi^2) # More advanced mathematical expressions
    ln(e^10) # Testing the ln(x) alias of log _e(x)
    log(e^10) # The normal log method
    5+3^2" in mm # Testing math with unit conversion
    1 + 2 / 3 * 4) mm^2 in cm^2 # Unbalanced paranthesis with unit conversion
    ((1 + 2 / 3 * 4) mm^2 in cm^2 # Unbalanced paranthesis the other way
    inf - inf # Not actually possible, but we backtrack to "inf"

The list of units and conversions was downloaded from:
http://w3.energistics.org/uom/poscUnits22.xml</string>
	<key>uidata</key>
	<dict>
		<key>06C9C4A9-38CE-441A-8D06-E2F2D8B39B60</key>
		<dict>
			<key>xpos</key>
			<real>700</real>
			<key>ypos</key>
			<real>670</real>
		</dict>
		<key>4CC56A28-09F3-4387-A540-81DCB4DC8C14</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>1440</real>
		</dict>
		<key>5E060269-88B3-4259-A125-92E4B3E8942C</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>1220</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E0</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>15</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E1</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>120</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E2</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>230</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E3</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>340</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E4</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>450</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E5</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>560</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E6</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>670</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E7</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>780</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E8</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>890</real>
		</dict>
		<key>7DD3BDE5-A157-42E5-9376-F681FB50A4E9</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>1000</real>
		</dict>
		<key>87B4FA40-AE32-4F0F-A763-0F7633244946</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>1550</real>
		</dict>
		<key>B9E7F633-5C7A-405B-894B-BBDFB09DE5C8</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>1110</real>
		</dict>
		<key>E42A313A-CE15-4A7E-B4B7-AAA7ADCBA21E</key>
		<dict>
			<key>xpos</key>
			<real>300</real>
			<key>ypos</key>
			<real>1330</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<true/>
				<key>required</key>
				<false/>
				<key>text</key>
				<string>Enable base 2 output</string>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Binary output</string>
			<key>type</key>
			<string>checkbox</string>
			<key>variable</key>
			<string>BASE_2</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<true/>
				<key>required</key>
				<false/>
				<key>text</key>
				<string>Enable base 8 output</string>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Octal output</string>
			<key>type</key>
			<string>checkbox</string>
			<key>variable</key>
			<string>BASE_8</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<true/>
				<key>required</key>
				<false/>
				<key>text</key>
				<string>Enable base 16 output</string>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Hexadecimal output</string>
			<key>type</key>
			<string>checkbox</string>
			<key>variable</key>
			<string>BASE_16</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>both</string>
				<key>pairs</key>
				<array>
					<array>
						<string>both</string>
						<string>both</string>
					</array>
					<array>
						<string>decimal</string>
						<string>decimal</string>
					</array>
					<array>
						<string>fractional</string>
						<string>fractional</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Fractional unit output</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>FRACTIONAL_UNITS</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>.</string>
				<key>pairs</key>
				<array>
					<array>
						<string>.</string>
						<string>.</string>
					</array>
					<array>
						<string>,</string>
						<string>,</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Decimal separator</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>DECIMAL_SEPARATOR</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>12</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>1 order of magnitude would show up to 10 times larger/smaller. For example, centimeter for millimeter, but not decimeter or meter. With 3 orders of magnitude millimeter will show meter.</string>
			<key>label</key>
			<string>Maximum orders of magnitude</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>MAX_MAGNITUDE</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>some-blacklisted-word other-blacklisted-word</string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
				<key>verticalsize</key>
				<integer>3</integer>
			</dict>
			<key>description</key>
			<string>Units that contain this text will not be shown.</string>
			<key>label</key>
			<string>Blacklisted units</string>
			<key>type</key>
			<string>textarea</string>
			<key>variable</key>
			<string>UNITS_BLACKLIST</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>right</string>
				<key>pairs</key>
				<array>
					<array>
						<string>right</string>
						<string>right</string>
					</array>
					<array>
						<string>left</string>
						<string>left</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string>right for "10 mm", left for "mm 10"</string>
			<key>label</key>
			<string>Side to show the units on</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>UNITS_SIDE</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>8</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>Note that the maximum orders of magnitude decide which conversions will be visible</string>
			<key>label</key>
			<string>Output decimals</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>OUTPUT_DECIMALS</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>1/128</string>
				<key>pairs</key>
				<array>
					<array>
						<string>0</string>
						<string>0</string>
					</array>
					<array>
						<string>1/2</string>
						<string>1/2</string>
					</array>
					<array>
						<string>1/4</string>
						<string>1/4</string>
					</array>
					<array>
						<string>1/8</string>
						<string>1/8</string>
					</array>
					<array>
						<string>1/16</string>
						<string>1/16</string>
					</array>
					<array>
						<string>1/32</string>
						<string>1/32</string>
					</array>
					<array>
						<string>1/64</string>
						<string>1/64</string>
					</array>
					<array>
						<string>1/128</string>
						<string>1/128</string>
					</array>
					<array>
						<string>1/256</string>
						<string>1/256</string>
					</array>
					<array>
						<string>1/512</string>
						<string>1/512</string>
					</array>
					<array>
						<string>1/1024</string>
						<string>1/1024</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string>Set the maximum fraction display precision (i.e. hide results with 3/223 or other weird fractions)</string>
			<key>label</key>
			<string>Fraction display precision</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>FRACTION_PRECISION</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>5</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>If a decimal cannot be accurately converted t o a fraction, set the maximum deviation percentage. For example, 0.7 is within 10% of 2/3 so it would show when we allow for 10% deviation but not with 1% (2/3*1.01 = ~0.673)</string>
			<key>label</key>
			<string>Maximum fraction deviation percentage</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>FRACTIONAL_MAX_DEVIATION</string>
		</dict>
	</array>
	<key>version</key>
	<string></string>
	<key>webaddress</key>
	<string>http://wol.ph/</string>
</dict>
</plist>
